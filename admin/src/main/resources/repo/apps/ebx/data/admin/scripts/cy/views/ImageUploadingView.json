{"type":"cy:bean","properties":{"beanType@STRING":"cy:requiremodule","name@STRING":"ImageUploadingView","dependencies@STRING":["/libs/bndly/data/scripts/cy/ui/input/FileInput","/libs/bndly/data/scripts/cy/ui/Image","/libs/bndly/data/scripts/cy/EntityCollection","/libs/bndly/data/scripts/cy/RestBeans","/libs/bndly/data/scripts/cy/EntityRelationViewComponent"],"script@STRING":"var ImageUploadingView = EntityRelationViewComponent.extend({\r\n\tconstruct: function(config) {\r\n\t\tif (!config) {\r\n\t\t\tconfig = {};\r\n\t\t}\r\n\r\n\t\tconfig.fileInput = new FileInput({\r\n\t\t\tname: \"image\",\r\n\t\t\tlabel: \"new image\",\r\n\t\t\tlisteners: {\r\n\t\t\t\tuploaded: {\r\n\t\t\t\t\tfn: this.newImageUploaded,\r\n\t\t\t\t\tscope: this\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tconfig.items = [\r\n\t\t\tconfig.fileInput\r\n\t\t];\r\n\r\n\t\tconfig.associationEntityType = \"ProductDataRestBean\";\r\n\t\tconfig.associationParentField = \"product\";\r\n\t\t\r\n\t\tvar proto = new RestBeans[config.associationEntityType]();\r\n\t\tvar p = new RestBeans[config.parent.clazzName()];\r\n\t\tvar self = config.parent.hasLink(\"self\");\r\n\t\tif(self) {\r\n\t\t\tp.setLink(\"self\", self.getHref());\r\n\t\t\tproto.set(config.associationParentField, p);\t\r\n\t\t\tproto.setRelation(\"image\");\r\n\t\t}\r\n\t\t\r\n\t\tconfig.imageAssociationsOfParent = new EntityCollection({\r\n\t\t\tproto: proto\r\n\t\t});\r\n\r\n\t\tthis.callSuper(arguments, config);\r\n\r\n\t\t// load the already defined variant model attributes for the product\r\n\t\tthis.listen(this.parent, \"persisted\", this.parentPersisted, this);\r\n\t\tthis.listen(this.imageAssociationsOfParent, \"allLoaded\", this.allAssociationsLoaded, this);\r\n\t\tthis.listen(this.imageAssociationsOfParent, \"inserted\", this.associationAdded, this);\r\n\r\n\t\tif(self) {\r\n\t\t\tthis.imageAssociationsOfParent.load();\r\n\t\t}\r\n\t},\r\n\trenderTo: function(renderTarget) {\r\n\t\tthis.invokeSuper(arguments);\r\n\t},\r\n\tparentPersisted: function(parent) {\r\n\t\t\r\n\t},\r\n\tallAssociationsLoaded: function(associations) {\r\n\t\tconsole.log(\"found \"+associations.size()+\" data associations\");\r\n\t},\r\n\tassociationAdded: function(association) {\r\n\t\tvar data = association.getBinaryData();\r\n\t\tif(data) {\r\n\t\t\tvar downloadLink = data.hasLink(\"download\");\r\n\t\t\tvar image = new Image({\r\n\t\t\t\tsource: downloadLink.getHref()\r\n\t\t\t});\r\n\t\t\tthis.items.add(image);\r\n\t\t}\r\n\t},\r\n\tnewImageUploaded: function(input, imageData) {\r\n\t\tvar pd = new RestBeans.ProductDataRestBean();\r\n\t\tpd.setBinaryData(imageData.ref());\r\n\t\tpd.setProduct(this.parent.ref());\r\n\t\tpd.setRelation(\"image\");\r\n\t\tpd.addSingleInvocationListener(\"reloaded\", function(productData){\r\n\t\t\tthis.imageAssociationsOfParent.add(productData);\r\n\t\t}, this);\r\n\t\tpd.persistAndReload();\r\n\t}\r\n});\r\nreturn ImageUploadingView;","initMethod@STRING":"","proxy@STRING":"","moduleId@STRING":""}}