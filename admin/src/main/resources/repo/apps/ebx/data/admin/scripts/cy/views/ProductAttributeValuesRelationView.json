{"type":"cy:bean","properties":{"beanType@STRING":"cy:requiremodule","name@STRING":"ProductAttributeValuesRelationView","dependencies@STRING":["/libs/bndly/data/scripts/cy/FieldSet","/libs/bndly/data/scripts/cy/Collection","/libs/bndly/data/scripts/cy/ui/input/TextInput","/libs/bndly/data/scripts/cy/ui/container/Form","/libs/bndly/data/scripts/cy/ui/input/Button","/libs/bndly/data/scripts/cy/RestBeans","/libs/bndly/data/scripts/cy/EntityRelationViewComponent"],"script@STRING":"var ProductAttributeValuesRelationView = EntityRelationViewComponent.extend({\r\n\tconstruct: function(config) {\r\n\t\tif (!config) {\r\n\t\t\tconfig = {};\r\n\t\t}\r\n\r\n\t\tvar newButton = new Button({\r\n\t\t\tlabel: \"new\"\r\n\t\t});\r\n\t\tconfig.form = new Form();\r\n\t\tconfig.items = [\r\n\t\t\tconfig.form,\r\n\t\t\tnewButton\r\n\t\t]\r\n\t\tconfig.productAttributes = new Collection();\r\n\r\n\t\tthis.callSuper(arguments, config);\r\n\r\n\t\tthis.listen(config.productAttributes, \"inserted\", this.addedProductAttributeValue, this);\r\n\t\tthis.listen(newButton, \"clicked\", function(btn) {\r\n\t\t\tthis.createEmptyProductAttributeValue();\r\n\t\t}, this);\r\n\r\n\t\t// load the already defined variant model attributes for the product\r\n\t\tthis.loadExistingProductAttributeValues();\r\n\t\tthis.listen(this.parent, \"persisted\", this.productAttributePersisted, this);\r\n\t},\r\n\tcreateEmptyProductAttributeValue: function() {\r\n\t\tvar ma = new RestBeans.ProductAttributeValueRestBean();\r\n\t\tthis.productAttributes.add(ma);\r\n\t},\r\n\tloadExistingProductAttributeValues: function() {\r\n\t\tvar self = this.parent.hasLink(\"self\");\r\n\t\tif (self) {\r\n\t\t\tvar variantModelProto = new RestBeans.ProductAttributeValueRestBean();\r\n\t\t\tvar p = new RestBeans[this.parent.clazzName()];\r\n\t\t\tp.setLink(\"self\", self.getHref());\r\n\t\t\tvariantModelProto.setProductAttribute(p);\r\n\t\t\tvariantModelProto.addListener(\"foundSimilar\", this.productAttributeValuePageRead, this);\r\n\t\t\tvariantModelProto.findAll();\r\n\t\t} else {\r\n\t\t\tconsole.log(\"parent product attribute has no self link\");\r\n\t\t}\r\n\t},\r\n\tproductAttributeValuePageRead: function(proto, page) {\r\n\t\tthis.loadPageItemsToCollection(proto, page, this.productAttributeValuePageRead, this.productAttributes);\r\n\t},\r\n\taddedProductAttributeValue: function(productAttributeValue) {\r\n\t\tvar valueInput = new TextInput({\r\n\t\t\tname: \"stringValue\",\r\n\t\t\tlabel: \"Value\",\r\n\t\t\tentity: productAttributeValue,\r\n\t\t\tmember: \"stringValue\"\r\n\t\t});\r\n\r\n\t\tvar fs = new FieldSet({\r\n\t\t\titems: [\r\n\t\t\t\tvalueInput\r\n\t\t\t]\r\n\t\t});\r\n\t\tthis.form.items.add(fs);\r\n\t},\r\n\tproductAttributePersisted: function(productAttribute) {\r\n\t\tconsole.log(\"persisting \" + this.productAttributes.size() + \" product attribute values\");\r\n\t\tthis.productAttributes.each(function(ma) {\r\n\t\t\tif(!ma.getStringValue()) {\r\n\t\t\t\tconsole.log(\"empty attribute value\");\r\n\t\t\t} else {\r\n\t\t\t\tma.setProductAttribute(productAttribute.ref());\r\n\t\t\t\tif (ma.hasLink(\"update\")) {\r\n\t\t\t\t\tconsole.log(\"updating\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log(\"creating\");\r\n\t\t\t\t}\r\n\t\t\t\tma.persistAndReload();\t\r\n\t\t\t}\r\n\t\t}, this);\r\n\t}\r\n});\r\nreturn ProductAttributeValuesRelationView;","initMethod@STRING":"","proxy@STRING":"","moduleId@STRING":""}}