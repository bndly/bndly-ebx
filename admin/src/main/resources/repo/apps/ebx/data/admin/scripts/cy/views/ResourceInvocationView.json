{"type":"cy:bean","properties":{"beanType@STRING":"cy:requiremodule","name@STRING":"ResourceInvocationView","dependencies@STRING":["/libs/bndly/data/scripts/cy/ui/Text","/libs/bndly/data/scripts/cy/EntityTableDataProvider","/libs/bndly/data/scripts/cy/ui/ViewComponent","/libs/bndly/data/scripts/cy/StringUtil","/libs/bndly/data/scripts/cy/RestBeans","/libs/vendor/d3"],"script@STRING":"var ResourceInvocationView = ViewComponent.extend({\r\n\tconstruct: function(config) {\r\n\t\tif (!config) {\r\n\t\t\tconfig = {};\r\n\t\t}\r\n\t\tconfig.titleText = new Text({value:\"Service Invocations\", tag: \"h1\"});\r\n\t\tconfig.dataProvider = new EntityTableDataProvider({\r\n\t\t\tproto: new RestBeans.ResourceMethodInvocationStatusRestBean(),\r\n\t\t\tsortField: \"startDate\",\r\n\t\t\tsortAscending: false,\r\n\t\t\tpageSize: 100,\r\n\t\t\tlisteners: {\r\n\t\t\t\tload: {\r\n\t\t\t\t\tfn: this.dataLoaded,\r\n\t\t\t\t\tscope: this\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.callSuper(arguments, config);\r\n\t},\r\n\tdestroy: function() {\r\n\t\tthis.invokeSuper(arguments);\r\n\t\tthis.titleText.destroy();\r\n\t},\r\n\trenderTo: function(renderTarget) {\r\n\t\tthis.renderTitle(renderTarget);\r\n\t\tthis.chartHolder = $(renderTarget).append(\"<div></div>\").children().last();\r\n\t\tthis.invokeSuper(arguments);\r\n\t\tthis.loadRecentData();\r\n\t},\r\n\tloadRecentData: function() {\r\n\t\tthis.dataProvider.loadPage();\r\n\t},\r\n\tdataLoaded: function(items) {\r\n\t\tvar mappedDuration = {},mappedInvocations = {},printedDates={},sampleCounts={};\r\n\t\titems.each(function(invc) {\r\n\t\t\tvar t = invc.getStartDate().getTime();\r\n\t\t\tif(!sampleCounts[t]) {\r\n\t\t\t\tsampleCounts[t] = 0;\r\n\t\t\t}\r\n\t\t\tsampleCounts[t]++;\r\n\t\t\tif(!mappedDuration[t]) {\r\n\t\t\t\tmappedDuration[t] = 0;\r\n\t\t\t}\r\n\t\t\tif(!mappedInvocations[t]) {\r\n\t\t\t\tmappedInvocations[t] = 0;\r\n\t\t\t}\r\n\t\t\tmappedDuration[t] += invc.getAverageDuration();\r\n\t\t\tmappedInvocations[t] += invc.getInvocationCount();\r\n\t\t}, this);\r\n\t\t\r\n\t\tvar data = [], keys = [],maxDuration = 0,maxInvocations = 0, i=0;\r\n\t\tfor(var t in mappedDuration) {\r\n\t\t\tvar d = new Date(parseInt(t)), dur = mappedDuration[t]/sampleCounts[t];\r\n\t\t\tif(i%8 === 0){\r\n\t\t\t\tprintedDates[d.getTime()] = true;\r\n\t\t\t}\r\n\t\t\ti++;\r\n\t\t\tif(dur > maxDuration) {\r\n\t\t\t\tmaxDuration = dur;\r\n\t\t\t}\r\n\t\t\tif(mappedInvocations[t] > maxInvocations) {\r\n\t\t\t\tmaxInvocations = mappedInvocations[t];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tkeys.push(d);\r\n\t\t\tdata.push({\r\n\t\t\t   date: d,\r\n\t\t\t   averageDuration: dur,\r\n\t\t\t   invocations: mappedInvocations[t]\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\r\n\t\tvar margin = {top: 20, right: 20, bottom: 30, left: 40},\r\n\t\twidth = 960 - margin.left - margin.right,\r\n\t\t\t\theight = 500 - margin.top - margin.bottom;\r\n\r\n\t\tvar x = d3.scale.ordinal()\r\n\t\t\t\t.rangeRoundBands([0, width], .1);\r\n\r\n\t\tvar y = d3.scale.linear()\r\n\t\t\t\t.range([height, 0]);\r\n\r\n\t\tvar xAxis = d3.svg.axis()\r\n\t\t\t\t.scale(x)\r\n\t\t\t\t.orient(\"bottom\")\r\n\t\t\t\t.tickFormat(function(d){\r\n\t\t\t\t\tif(printedDates[d.getTime()]) {\r\n\t\t\t\t\t\treturn StringUtil.formatTime(d);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\tvar yAxis = d3.svg.axis()\r\n\t\t\t\t.scale(y)\r\n\t\t\t\t.orient(\"left\")\r\n\t\t\t\t.ticks(10);\r\n\r\n\t\tvar svg = d3.select($(this.chartHolder).get(0)).append(\"svg\")\r\n\t\t\t\t.attr(\"width\", width + margin.left + margin.right)\r\n\t\t\t\t.attr(\"height\", height + margin.top + margin.bottom)\r\n\t\t\t\t.append(\"g\")\r\n\t\t\t\t.attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n\r\n\t\tx.domain(keys);\r\n\t\ty.domain([0, maxDuration]);\r\n\r\n\t\tsvg.append(\"g\")\r\n\t\t\t\t.attr(\"class\", \"x axis\")\r\n\t\t\t\t.attr(\"transform\", \"translate(0,\" + height + \")\")\r\n\t\t\t\t.call(xAxis);\r\n\r\n\t\tsvg.append(\"g\")\r\n\t\t\t\t.attr(\"class\", \"y axis\")\r\n\t\t\t\t.call(yAxis)\r\n\t\t\t\t.append(\"text\")\r\n\t\t\t\t.attr(\"transform\", \"rotate(-90)\")\r\n\t\t\t\t.attr(\"y\", 6)\r\n\t\t\t\t.attr(\"dy\", \".71em\")\r\n\t\t\t\t.style(\"text-anchor\", \"end\")\r\n\t\t\t\t.text(\"Average duration\");\r\n\r\n\t\tsvg.selectAll(\".bar\")\r\n\t\t\t\t.data(data)\r\n\t\t\t\t.enter().append(\"rect\")\r\n\t\t\t\t.attr(\"class\", \"bar\")\r\n\t\t\t\t.attr(\"x\", function(d) {\r\n\t\t\t\t\treturn x(d.date);\r\n\t\t\t\t})\r\n\t\t\t\t.attr(\"width\", x.rangeBand())\r\n\t\t\t\t.attr(\"y\", function(d) {\r\n\t\t\t\t\treturn y(d.averageDuration);\r\n\t\t\t\t})\r\n\t\t\t\t.attr(\"height\", function(d) {\r\n\t\t\t\t\treturn height - y(d.averageDuration);\r\n\t\t\t\t});\r\n\t},\r\n\trenderTitle: function(renderTarget) {\r\n\t\tif (this.titleText) {\r\n\t\t\tthis.titleText.renderTo(renderTarget);\r\n\t\t}\r\n\t}\r\n});\r\nreturn ResourceInvocationView;","initMethod@STRING":"","proxy@STRING":"","moduleId@STRING":""}}