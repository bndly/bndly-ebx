{"type":"cy:bean","properties":{"beanType@STRING":"cy:requiremodule","name@STRING":"VariantAttributesRelationView","dependencies@STRING":["/libs/bndly/data/scripts/cy/ui/Text","/libs/bndly/data/scripts/cy/EntityCollection","/libs/bndly/data/scripts/cy/LabelFunctions","/libs/bndly/data/scripts/cy/RestBeans","/libs/bndly/data/scripts/cy/EntityRelationViewComponent"],"script@STRING":"var VariantAttributesRelationView = EntityRelationViewComponent.extend({\r\n\tconstruct: function(config) {\r\n\t\tif (!config) {\r\n\t\t\tconfig = {};\r\n\t\t}\r\n\t\tthis.callSuper(arguments, config);\r\n\t\tthis.listen(this.parent, \"changed\", this.variantChanged, this);\r\n\t\tthis.listen(this.parent, \"persisted\", this.variantPersisted, this);\r\n\t\tthis.loadAllDetails();\r\n\t},\r\n\tloadAllDetails: function() {\r\n\t\tvar variantDetailsProto = new RestBeans[\"VariantDetailRestBean\"]();\r\n\t\tif(this.parent.getId() || this.parent.hasLink(\"self\")) {\r\n\t\t\tvariantDetailsProto.setVariant(this.parent.ref());\r\n\t\t\tnew EntityCollection({\r\n\t\t\t\tproto: variantDetailsProto,\r\n\t\t\t\tlisteners: {\r\n\t\t\t\t\tallLoaded: {\r\n\t\t\t\t\t\tfn: this.allDetailsLoaded,\r\n\t\t\t\t\t\tscope: this\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}).load();\r\n\t\t}\r\n\t},\r\n\tallDetailsLoaded: function(variantDetails) {\r\n\t\tconsole.log(\"all details loaded. \"+variantDetails.size());\r\n\t\tvariantDetails.each(function(detail) {\r\n\t\t\tif(detail.getProductAttributeValue()) {\r\n\t\t\t\tvar name = detail.getProductAttributeValue().getProductAttribute().getName(),\r\n\t\t\t\t\t\tattributeConfig = this.assertAttributeConfigExists(name);\r\n\t\t\t\t// each attribute is assigned with a value in the association object \"VariantDetailRestBean\"\r\n\t\t\t\tdetail.setVariant(this.parent.ref());\r\n\t\t\t\tattributeConfig.variantDetail = detail;\r\n\t\t\t\tthis.selectOptionOfProductAttributeValue(attributeConfig);\t\t\t\t\t\r\n\t\t\t}\r\n\t\t}, this);\r\n\t},\r\n\tassertAttributeConfigExists: function(name) {\r\n\t\tif (!this.attributes[name]) {\r\n\t\t\tthis.attributes[name] = {\r\n\t\t\t\tattributeName: name\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn this.attributes[name];\r\n\t},\r\n\trenderTo: function(renderTarget) {\r\n\t\tthis.form = $(renderTarget).append(\"<form class=\\\"form-horizontal\\\"></form>\").children().last();\r\n\t\tthis.attributes = {};\r\n\t\tvar product = this.parent.getProduct();\r\n\t\tif (product) {\r\n\t\t\tthis.productChanged(product);\r\n\t\t}\r\n\t},\r\n\tvariantChanged: function(parent, member, newValue, oldValue) {\r\n\t\tconsole.log(\"variant changed \" + member);\r\n\t\tif (member === \"product\") {\r\n\t\t\tthis.productChanged(parent.get(member));\r\n\t\t}\r\n\t},\r\n\tproductChanged: function(product) {\r\n\t\tif (this.form) {\r\n\t\t\tthis.form.children().remove();\r\n\r\n\t\t\tvar pfa = new RestBeans.ProductFamilyAttributeRestBean();\r\n\t\t\tpfa.setFamily(product.getFamily());\r\n\t\t\tpfa.addListener(\"foundSimilar\", this.renderAttributesOfPage, this);\r\n\t\t\tpfa.findAll();\r\n\t\t}\r\n\t},\r\n\trenderAttributesOfPage: function(proto, page) {\r\n\t\tif (page.getPage().getTotalRecords()) {\r\n\t\t\t// load the next page\r\n\t\t\tvar next = page.hasLink(\"next\");\r\n\t\t\tif (next) {\r\n\t\t\t\tpage.follow({\r\n\t\t\t\t\tlink: next,\r\n\t\t\t\t\tcb: function(nextPage) {\r\n\t\t\t\t\t\tthis.renderAttributesOfPage(proto, nextPage);\r\n\t\t\t\t\t},\r\n\t\t\t\t\tscope: this\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t;\r\n\r\n\t\t\t// render the already known attributes\r\n\t\t\tpage.getItems().each(function(attribute) {\r\n\t\t\t\tthis.renderAttribute(attribute);\r\n\t\t\t}, this);\r\n\t\t} else {\r\n\t\t\tvar text = new Text({value: \"The product \\\"\" + LabelFunctions(this.parent.getProduct()) + \"\\\" does not define any attributes.\"});\r\n\t\t\tvar p = $(this.form).append(\"<p></p>\").children().last();\r\n\t\t\ttext.renderTo(p);\r\n\t\t}\r\n\t},\r\n\trenderAttribute: function(attribute) {\r\n\t\tvar name = attribute.getAttribute().getName();\r\n\t\tvar label = LabelFunctions(attribute.getAttribute());\r\n\t\tif (!label) {\r\n\t\t\tlabel = name;\r\n\t\t}\r\n\t\tvar attributeConfig = this.assertAttributeConfigExists(name);\r\n\r\n\t\t// each attribute is assigned with a value in the association object \"VariantDetailRestBean\"\r\n\t\tif (!attributeConfig.variantDetail) {\r\n\t\t\tvar variantDetail = new RestBeans.VariantDetailRestBean();\r\n\t\t\tvariantDetail.setVariant(this.parent.ref());\r\n\t\t\tattributeConfig.variantDetail = variantDetail;\r\n\t\t}\r\n\r\n\t\tattributeConfig.controlGroup = $(this.form).append(\"<div class=\\\"control-group\\\"></div>\").children().last();\r\n\t\tattributeConfig.label = $(attributeConfig.controlGroup).append(\"<label class=\\\"control-label\\\"></label>\").children().last();\r\n\t\t$(attributeConfig.label).attr(\"for\", name);\r\n\t\tattributeConfig.labelText = new Text({value: label});\r\n\t\tattributeConfig.labelText.renderTo(attributeConfig.label);\r\n\t\tattributeConfig.controls = $(attributeConfig.controlGroup).append(\"<div class=\\\"controls\\\"></div>\").children().last();\r\n\t\tattributeConfig.select = $(attributeConfig.controls).append(\"<select></select>\").children().last();\r\n\t\tvar _this = this;\r\n\t\tattributeConfig.select.change(function() {\r\n\t\t\tconsole.log(\"selected \"+attributeConfig.select.val());\r\n\t\t\tif(attributeConfig.variantDetail) {\r\n\t\t\t\tvar val = new RestBeans.ProductAttributeValueReferenceRestBean();\r\n\t\t\t\tval.setLink(\"self\", attributeConfig.select.val());\r\n\t\t\t\tattributeConfig.variantDetail.setProductAttributeValue(val);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// load the available values for the attribute\r\n\t\tvar valueProto = new RestBeans.ProductAttributeValueRestBean();\r\n\t\tvar pa = new RestBeans.ProductAttributeRestBean();\r\n\t\tpa.setId(attribute.getAttribute().getId());\r\n\t\tvalueProto.setProductAttribute(pa);\r\n\t\tvalueProto.addListener(\"foundSimilar\", this.renderValuesOfAttribute, this);\r\n\t\tvalueProto.findAll();\r\n\t},\r\n\trenderValuesOfAttribute: function(proto, page) {\r\n\t\t// load the next page\r\n\t\tvar next = page.hasLink(\"next\");\r\n\t\tif (next) {\r\n\t\t\tpage.follow({\r\n\t\t\t\tlink: next,\r\n\t\t\t\tcb: function(nextPage) {\r\n\t\t\t\t\tthis.renderValuesOfAttribute(proto, nextPage);\r\n\t\t\t\t},\r\n\t\t\t\tscope: this\r\n\t\t\t});\r\n\t\t}\r\n\t\t;\r\n\r\n\t\tpage.getItems().each(function(attributeValue) {\r\n\t\t\tthis.renderValueOfAttribute(attributeValue);\r\n\t\t}, this);\r\n\t},\r\n\trenderValueOfAttribute: function(attributeValue) {\r\n\t\tvar name = attributeValue.getProductAttribute().getName();\r\n\t\tvar href = attributeValue.hasLink(\"self\").getHref();\r\n\t\tvar label = LabelFunctions(attributeValue);\r\n\t\tif (!label) {\r\n\t\t\tlabel = attributeValue.getStringValue();\r\n\t\t}\r\n\t\tvar attributeConfig = this.attributes[name];\r\n\t\tvar opt = $(attributeConfig.select).append(\"<option></option>\").children().last();\r\n\t\t$(opt).attr(\"value\", href);\r\n\t\tnew Text({value: label}).renderTo(opt);\r\n\t\tthis.selectOptionOfProductAttributeValue(attributeConfig);\r\n\t},\r\n\tvariantPersisted: function() {\r\n\t\tfor(var name in this.attributes) {\r\n\t\t\tvar attributeConfig = this.attributes[name];\r\n\t\t\tattributeConfig.variantDetail.setVariant(this.parent.ref());\r\n\t\t\tif(attributeConfig.variantDetail.getProductAttributeValue()) {\r\n\t\t\t\t// console.log(\"persisting \"+name+\" now.\");\r\n\t\t\t\tattributeConfig.variantDetail.persist();\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tselectOptionOfProductAttributeValue: function(attributeConfig) {\r\n\t\tif (attributeConfig.variantDetail) {\r\n\t\t\tif (attributeConfig.select) {\r\n\t\t\t\tvar pav = attributeConfig.variantDetail.getProductAttributeValue();\r\n\t\t\t\tif (pav) {\r\n\t\t\t\t\tvar val = pav.hasLink(\"self\").getHref();\r\n\t\t\t\t\t//console.log(\"setting attribute value \" + val);\r\n\t\t\t\t\t$(attributeConfig.select).val(val);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//console.log(\"no productattribute value\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n});\r\nreturn VariantAttributesRelationView;","initMethod@STRING":"","proxy@STRING":"","moduleId@STRING":""}}