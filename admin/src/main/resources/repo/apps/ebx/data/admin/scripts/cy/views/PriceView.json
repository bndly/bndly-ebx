{"type":"cy:bean","properties":{"beanType@STRING":"cy:requiremodule","name@STRING":"PriceView","dependencies@STRING":["/libs/bndly/data/scripts/cy/ui/input/DateInput","/libs/bndly/data/scripts/cy/EntityCollection","/libs/bndly/data/scripts/cy/Collection","/libs/bndly/data/scripts/cy/ui/input/SelectInput","/libs/bndly/data/scripts/cy/ui/input/Button","/libs/bndly/data/scripts/cy/LabelFunctions","/libs/bndly/data/scripts/cy/RestBeans","/libs/bndly/data/scripts/cy/FieldSet"],"script@STRING":"var PriceView = FieldSet.extend({\r\n\tconstruct: function(config) {\r\n\t\tif (!config) {\r\n\t\t\tconfig = {};\r\n\t\t}\r\n\r\n\t\t\t\t\tif(!config.price) {\r\n\t\t\t\t\t\tthrow new Error(\"missing price object\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar constraints = config.price.getConstraints();\r\n\t\t\t\t\tif(!constraints) {\r\n\t\t\t\t\t\tconstraints = new RestBeans[\"PriceConstraintListRestBean\"]();\r\n\t\t\t\t\t\tconfig.price.setConstraints(constraints);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar constraintItems = constraints.getItems();\r\n\t\t\t\t\tif(!constraintItems) {\r\n\t\t\t\t\t\tconstraintItems = new Collection();\r\n\t\t\t\t\t\tconstraints.setItems(constraintItems);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(constraintItems.size() <= 0) {\r\n\t\t\t\t\t\tconfig.constraint = new RestBeans[\"PriceConstraintRestBean\"]();\r\n\t\t\t\t\t\tconstraintItems.add(config.constraint);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconfig.constraint = constraintItems.getItemAt(0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!config.taxModels) {\r\n\t\t\t\t\t\tconfig.taxModels = new EntityCollection({\r\n\t\t\t\t\t\t\tproto: new RestBeans[\"ValueAddedTaxRestBean\"]()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconfig.taxModels.load();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!config.currencies) {\r\n\t\t\t\t\t\tconfig.currencies = new EntityCollection({\r\n\t\t\t\t\t\t\tproto: new RestBeans[\"CurrencyRestBean\"]()\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tconfig.currencies.load();\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tvar taxModelInput = new SelectInput({\r\n\t\t\tname: \"taxModel\",\r\n\t\t\tlabel: \"Tax Model\",\r\n\t\t\tallowEmpty: true,\t\r\n\t\t\tentryValueFn: function(entry) {\r\n\t\t\t\tvar l = entry.hasLink(\"self\");\r\n\t\t\t\treturn l ? l.getHref() : \"\";\r\n\t\t\t},\r\n\t\t\tentryLabelFn: LabelFunctions,\r\n\t\t\tentity: config.price,\r\n\t\t\tmember: \"taxModel\",\r\n\t\t\titems: config.taxModels\r\n\t\t});\r\n\t\t\t\t\tvar currencyInput = new SelectInput({\r\n\t\t\tname: \"currency\",\r\n\t\t\tlabel: \"Currency\",\r\n\t\t\t\t\t\t\tallowEmpty: true,\r\n\t\t\tentryValueFn: function(entry) {\r\n\t\t\t\tvar l = entry.hasLink(\"self\");\r\n\t\t\t\treturn l ? l.getHref() : \"\";\r\n\t\t\t},\r\n\t\t\tentryLabelFn: LabelFunctions,\r\n\t\t\tentity: config.price,\r\n\t\t\tmember: \"currency\",\r\n\t\t\titems: config.currencies\r\n\t\t});\r\n\t\t\t\t\tif(!config.items) {\r\n\t\t\t\t\t\tconfig.items = [];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar sharedItems = [\r\n\t\t\t\t\t\tnew DateInput({\r\n\t\t\tname: \"validFrom\",\r\n\t\t\tlabel: \"Valid From\",\r\n\t\t\tentity: config.constraint,\r\n\t\t\tmember: \"startDate\"\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew DateInput({\r\n\t\t\tname: \"validTo\",\r\n\t\t\tlabel: \"Valid To\",\r\n\t\t\tentity: config.constraint,\r\n\t\t\tmember: \"endDate\"\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tcurrencyInput,\r\n\t\t\t\t\t\ttaxModelInput,\r\n\t\t\t\t\t\tnew Button({\r\n\t\t\t\t\t\t\tlabel: \"remove\",\r\n\t\t\t\t\t\t\tlisteners: {\r\n\t\t\t\t\t\t\t\tclicked: {\r\n\t\t\t\t\t\t\t\t\tfn: this.removeButtonClicked,\r\n\t\t\t\t\t\t\t\t\tscope: this\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t];\r\n\t\t\t\t\tfor(var i in sharedItems) {\r\n\t\t\t\t\t\tif(config.items instanceof Collection) {\r\n\t\t\t\t\t\t\tconfig.items.add(sharedItems[i]);\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tconfig.items.push(sharedItems[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\tthis.callSuper(arguments, config);\r\n\t},\r\n\t\t\tdestroy: function() {\r\n\t\t\t\tthis.invokeSuper(arguments);\r\n\t},\r\n\trenderTo: function(renderTarget) {\r\n\t\tthis.invokeSuper(arguments);\r\n\t},\r\n\t\t\tremoveButtonClicked: function(button) {\r\n\t\t\t\tthis.fireEvent(\"removed\", this);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n});\r\nreturn PriceView;","initMethod@STRING":"","proxy@STRING":"","moduleId@STRING":""}}